buildscript {
    ext {
        springBootVersion = '3.4.3'
        springBootManagementVersion = '1.1.7'
        springCloudVersion = '2024.0.0'
        jakartaServletApiVersion = '6.1.0'

        querydslVersion = '5.1.0'
        querydslPluginVersion = '1.0.10'
        mysqlConnectorJavaVersion = '8.0.33'
        lombokVersion = '1.18.36'
        swaggerVersion = '2.8.5'
        httpclient5Version = '5.4.2'
        junitPlatformVersion = '1.11.4'
        jacksonVersion = '2.18.2'
        easyRandomCoreVersion = '5.0.0'
        commonsIoVersion = '2.18.0'
        commonsLang3Version = '3.17.0'
        commonsCollections4Version = '4.4'
        logbackClassicVersion = '1.5.6'
        slf4jApiVersion = '2.0.16'
        assertjCoreVersion = '3.27.3'
        guavaVersion = '33.4.0-jre'
        modelmapperVersion = '3.2.2'
        ioJsonwebtokenVersion = '0.12.6'
        jacksonVersion = '2.18.2'
        jaxbApiVersion = '2.3.1'
        servletApiVersion = '4.0.1'
        jsonPathVersion = '2.9.0'
        redissonVersion = '3.45.0'
        ehcacheVersion = '3.10.8'
        cacheApiVersion = '1.1.1'
        uapJavaVersion = '1.6.1'
        testcontainersVersion = '1.20.6'
        mockitoVersion = '5.15.2'
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${springBootManagementVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
    }
}

allprojects {
    group 'kr.money.book'
    version '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'eclipse-wtp'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter"
        implementation "commons-io:commons-io:${commonsIoVersion}"
        implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
        implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"
        implementation "ch.qos.logback:logback-classic:${logbackClassicVersion}"
        implementation "ch.qos.logback:logback-core:${logbackClassicVersion}"
        implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
        implementation "org.slf4j:jul-to-slf4j:${slf4jApiVersion}"
        testImplementation "org.assertj:assertj-core:${assertjCoreVersion}"
        testImplementation("org.springframework.boot:spring-boot-starter-test") {
            exclude group: "org.junit.vintage", module: "junit-vintage-engine"
        }
        testImplementation "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"
        testImplementation "org.junit.platform:junit-platform-runner:${junitPlatformVersion}"
        testImplementation "org.junit.platform:junit-platform-engine:${junitPlatformVersion}"
        testImplementation "org.junit.platform:junit-platform-commons:${junitPlatformVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-params"
        testImplementation "org.projectlombok:lombok"
        testImplementation "org.jeasy:easy-random-core:${easyRandomCoreVersion}"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        testAnnotationProcessor "org.projectlombok:lombok"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.fasterxml.jackson:jackson-bom:${jacksonVersion}"
        }
    }

    configurations.all {
        resolutionStrategy {
            force "ch.qos.logback:logback-classic:${logbackClassicVersion}"
            force "ch.qos.logback:logback-core:${logbackClassicVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }
}
